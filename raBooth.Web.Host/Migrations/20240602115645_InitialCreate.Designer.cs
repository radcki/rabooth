// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using raBooth.Web.Core.DataAccess;

#nullable disable

namespace raBooth.Web.Host.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240602115645_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("raBooth.Web.Core.Entities.Collage", b =>
                {
                    b.Property<Guid>("CollageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AddedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CaptureDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CollageId");

                    b.ToTable("Collages");
                });

            modelBuilder.Entity("raBooth.Web.Core.Entities.CollageSourcePhoto", b =>
                {
                    b.Property<int>("CollageSourcePhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CollageSourcePhotoId"));

                    b.Property<DateTime>("AddedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CaptureDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CollageId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<Guid>("PhotoId")
                        .HasColumnType("char(36)");

                    b.HasKey("CollageSourcePhotoId");

                    b.HasIndex("CollageId");

                    b.ToTable("CollageSourcePhoto");
                });

            modelBuilder.Entity("raBooth.Web.Core.Entities.Collage", b =>
                {
                    b.OwnsOne("raBooth.Web.Core.Entities.CollagePhoto", "CollagePhoto", b1 =>
                        {
                            b1.Property<Guid>("CollageId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime>("AddedDateTime")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime>("CaptureDateTime")
                                .HasColumnType("datetime(6)");

                            b1.Property<bool>("Deleted")
                                .HasColumnType("tinyint(1)");

                            b1.Property<DateTime?>("DeletedDate")
                                .HasColumnType("datetime(6)");

                            b1.Property<int>("Index")
                                .HasColumnType("int");

                            b1.Property<Guid>("PhotoId")
                                .HasColumnType("char(36)");

                            b1.HasKey("CollageId");

                            b1.ToTable("Collages");

                            b1.WithOwner()
                                .HasForeignKey("CollageId");
                        });

                    b.Navigation("CollagePhoto")
                        .IsRequired();
                });

            modelBuilder.Entity("raBooth.Web.Core.Entities.CollageSourcePhoto", b =>
                {
                    b.HasOne("raBooth.Web.Core.Entities.Collage", null)
                        .WithMany("SourcePhotos")
                        .HasForeignKey("CollageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("raBooth.Web.Core.Entities.Collage", b =>
                {
                    b.Navigation("SourcePhotos");
                });
#pragma warning restore 612, 618
        }
    }
}
